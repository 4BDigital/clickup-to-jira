name: CI

on:
  push:

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-tests.txt
      - name: Run precommit
        run: pre-commit run --all-files

  unittest:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Install dependencies
        run: pip install -r requirements-tests.txt -r requirements.txt
      - name: Run tests
        run: coverage run --source=clickup_to_jira/ -m pytest
      - name: Print report
        run: coverage report

  documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Install library
        run: pip install .
      - name: Install sphinx
        run: pip install -r requirements-docs.txt
      - name: Run sphinx build
        run: sphinx-build -b html docs/ docs/_build/html -a
      - name: Upload documentation as artifact
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: docs/_build/html
      - name: Upload to read the docs
        if: "github.event_name == 'push' && github.ref == 'refs/heads/master'"
        run: curl -X POST -d "branches=master" -d "token=${{ secrets.RTDS_WEBHOOK_TOKEN }}"  ${{ secrets.RTDS_WEBHOOK_URL }}

  bump:
    if: "github.event_name == 'push' && github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    needs:
      - precommit
      - unittest
      - documentation
    steps:
      - name: Install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: yarn install
      - name: Release
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  upload:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - bump
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Install dependencies
        run: pip install wheel
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
